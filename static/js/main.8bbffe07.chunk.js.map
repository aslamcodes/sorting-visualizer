{"version":3,"sources":["algorithms/mergeSort.js","algorithms/quickSort.js","Visualizer/SortingVisualizer.js","algorithms/bubbleSort.js","algorithms/selectionSort.js","algorithms/insertionSort.js","App.js","index.js"],"names":["getMergeSortAnimations","array","animations","length","auxiliaryArray","slice","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","Math","floor","k","i","j","push","doMerge","getQuickSortAnimations","items","left","right","index","partition","pivot","swap","leftIndex","rightIndex","temp","SortingVisualizer","useState","value","setValue","generate","setGenerate","selectedAlgo","setAlgo","setArray","useEffect","randomFromInterval","createArr","animate","duration","arrayBars","document","getElementsByClassName","barOneIdx","barTwoIdx","isColor","isLast","barOneStyle","style","barTwoStyle","color","setTimeout","backgroundColor","height","innerHTML","quickSort","sort","mergeSort","n","getBubbleSortAnimations","bubbleSort","arr","min_idx","getSelectionSortAnimations","selectionSort","key","getInsertionSortAnimations","insertionSort","className","map","ele","width","onClick","Slider","min","max","onChange","_","newValue","margin","src","alt","cursor","random","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8bbffe07.chunk.js","sourcesContent":["export function getMergeSortAnimations(array) {\n  const animations = [];\n  if (array.length <= 1) return array;\n  const auxiliaryArray = array.slice();\n  mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\n  return animations;\n}\n\nfunction mergeSortHelper(\n  mainArray,\n  startIdx,\n  endIdx,\n  auxiliaryArray,\n  animations\n) {\n  if (startIdx === endIdx) return;\n  const middleIdx = Math.floor((startIdx + endIdx) / 2);\n  mergeSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\n  mergeSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\n  doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\n}\n\nfunction doMerge(\n  mainArray,\n  startIdx,\n  middleIdx,\n  endIdx,\n  auxiliaryArray,\n  animations\n) {\n  let k = startIdx;\n  let i = startIdx;\n  let j = middleIdx + 1;\n  while (i <= middleIdx && j <= endIdx) {\n    animations.push([i, j, true, false]);\n    animations.push([i, j, true, true]);\n    if (auxiliaryArray[i] <= auxiliaryArray[j]) {\n      animations.push([k, auxiliaryArray[i], false, false]);\n      mainArray[k++] = auxiliaryArray[i++];\n    } else {\n      animations.push([k, auxiliaryArray[j], false, false]);\n      mainArray[k++] = auxiliaryArray[j++];\n    }\n  }\n  while (i <= middleIdx) {\n    animations.push([i, i, true, false]);\n    animations.push([i, i, true, true]);\n    animations.push([k, auxiliaryArray[i], false, false]);\n    mainArray[k++] = auxiliaryArray[i++];\n  }\n  while (j <= endIdx) {\n    animations.push([j, j, true, false]);\n    animations.push([j, j, true, true]);\n    animations.push([k, auxiliaryArray[j], false, false]);\n    mainArray[k++] = auxiliaryArray[j++];\n  }\n}\n","export const getQuickSortAnimations = (items, left, right) => {\n  var index;\n  let animations = [];\n  if (items.length > 1) {\n    index = partition(items, left, right, animations);\n    if (left < index - 1) {\n      animations.push(...getQuickSortAnimations(items, left, index - 1));\n    }\n    if (index < right) {\n      animations.push(...getQuickSortAnimations(items, index, right));\n    }\n  }\n  return animations;\n};\n\nconst partition = (items, left, right, animations) => {\n  var pivot = items[Math.floor((right + left) / 2)],\n    i = left,\n    j = right;\n  while (i <= j) {\n    while (items[i] < pivot) {\n      i++;\n    }\n    while (items[j] > pivot) {\n      j--;\n    }\n    if (i <= j) {\n      swap(items, i, j, animations);\n      i++;\n      j--;\n    }\n  }\n  return i;\n};\n\nconst swap = (items, leftIndex, rightIndex, animations) => {\n  animations.push([leftIndex, rightIndex, true, false]);\n  animations.push([leftIndex, rightIndex, true, true]);\n  var temp = items[leftIndex];\n  items[leftIndex] = items[rightIndex];\n  items[rightIndex] = temp;\n  animations.push([leftIndex, items[leftIndex], false, false]);\n  animations.push([rightIndex, temp, false, false]);\n};\n","import { Slider } from \"@material-ui/core\";\nimport React, { useState, useEffect } from \"react\";\nimport { getBubbleSortAnimations } from \"../algorithms/bubbleSort\";\nimport { getMergeSortAnimations } from \"../algorithms/mergeSort\";\nimport { getQuickSortAnimations } from \"../algorithms/quickSort\";\nimport { getSelectionSortAnimations } from \"../algorithms/selectionSort\";\nimport { getInsertionSortAnimations } from \"../algorithms/insertionSort\";\nimport \"./SortingVisualizer.css\";\n\nconst SortingVisualizer = () => {\n  const [value, setValue] = useState(19);\n  const [generate, setGenerate] = useState(false);\n  const [selectedAlgo, setAlgo] = useState(\"Merge Sort\");\n  const [array, setArray] = useState([]);\n\n  useEffect(() => {\n    const createArr = () => {\n      const array = [];\n      for (let i = 0; i < value; i++) {\n        array.push(randomFromInterval(15, 600));\n      }\n      setArray(array);\n    };\n\n    createArr();\n  }, [value, generate]);\n\n  const animate = (animations, duration) => {\n    const arrayBars = document.getElementsByClassName(\"arrayBar\");\n    for (let i = 0; i < animations.length; i++) {\n      const [barOneIdx, barTwoIdx, isColor, isLast] = animations[i];\n      if (isColor) {\n        const barOneStyle = arrayBars[barOneIdx].style;\n        const barTwoStyle = arrayBars[barTwoIdx].style;\n        const color = !isLast ? \"red\" : \"#4ebd9c\";\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * (value < 20 ? 100 : duration));\n      } else {\n        setTimeout(() => {\n          const barOneStyle = arrayBars[barOneIdx].style;\n          barOneStyle.height = `${barTwoIdx}px`;\n          if (value < 20) {\n            arrayBars[barOneIdx].innerHTML = barTwoIdx;\n          }\n        }, i * (value < 20 ? 100 : duration));\n      }\n    }\n  };\n\n  const mergeSort = () => {\n    const animations = getMergeSortAnimations(array);\n    animate(animations, 3);\n  };\n\n  const bubbleSort = () => {\n    const animations = getBubbleSortAnimations(array);\n    animate(animations, 1);\n  };\n\n  const quickSort = () => {\n    const animations = getQuickSortAnimations(array, 0, array.length - 1);\n    animate(animations, 10);\n  };\n\n  const selectionSort = () => {\n    const animations = getSelectionSortAnimations(array);\n    animate(animations, 10);\n  };\n\n  const insertionSort = () => {\n    const animations = getInsertionSortAnimations(array);\n    animate(animations, 10);\n  };\n\n  const sort = () => {\n    switch (selectedAlgo) {\n      case \"Merge Sort\":\n        mergeSort();\n        break;\n\n      case \"Bubble Sort\":\n        bubbleSort();\n        break;\n\n      case \"Quick Sort\":\n        quickSort();\n        break;\n\n      case \"Selection Sort\":\n        selectionSort();\n        break;\n\n      case \"Insertion Sort\":\n        insertionSort();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div className=\"visualizer\">\n      {array.map((ele, index) => {\n        if (value < 20) {\n          return (\n            <div\n              key={index}\n              className=\"arrayBar\"\n              style={{ height: `${ele}px`, width: \"40px\" }}\n            >\n              {ele}\n            </div>\n          );\n        }\n        if (value < 50) {\n          return (\n            <div\n              key={index}\n              className=\"arrayBar\"\n              style={{ height: `${ele}px`, width: \"20px\" }}\n            />\n          );\n        }\n        return (\n          <div\n            key={index}\n            className=\"arrayBar\"\n            style={{ height: `${ele}px`, width: \"5px\" }}\n          />\n        );\n      })}\n      <div className=\"bottomContainer\">\n        <h1 className=\"title\">Sorting Visualizer</h1>\n        <div className=\"divider\" />\n        <div className=\"algorithms\">\n          <p\n            className={selectedAlgo === \"Merge Sort\" ? \"active\" : \"\"}\n            onClick={() => {\n              setAlgo(\"Merge Sort\");\n            }}\n          >\n            Merge Sort\n          </p>\n          <p\n            className={selectedAlgo === \"Bubble Sort\" ? \"active\" : \"\"}\n            onClick={() => setAlgo(\"Bubble Sort\")}\n          >\n            Bubble Sort\n          </p>\n          <p\n            className={selectedAlgo === \"Quick Sort\" ? \"active\" : \"\"}\n            onClick={() => setAlgo(\"Quick Sort\")}\n          >\n            Quick Sort\n          </p>\n          <p\n            className={selectedAlgo === \"Selection Sort\" ? \"active\" : \"\"}\n            onClick={() => setAlgo(\"Selection Sort\")}\n          >\n            Selection Sort\n          </p>\n          <p\n            className={selectedAlgo === \"Insertion Sort\" ? \"active\" : \"\"}\n            onClick={() => setAlgo(\"Insertion Sort\")}\n          >\n            Insertion Sort\n          </p>\n        </div>\n        <div className=\"divider\" />\n        <p className=\"generate\" onClick={() => setGenerate(!generate)}>\n          Generate New Array\n        </p>\n        <div className=\"divider\" />\n        <div className=\"range\">\n          <p className=\"text\">Size and Speed 👉 </p>\n          <Slider\n            value={value}\n            min={5}\n            max={150}\n            onChange={(_, newValue) => setValue(newValue)}\n            style={{\n              color: \"#fff\",\n              width: \"300px\",\n              margin: \"0px 1rem\",\n            }}\n          />\n        </div>\n        <img\n          src=\"https://www.summitcl.com/wp-content/uploads/2018/11/play-button-overlay-png-1.png\"\n          alt=\"Sort!\"\n          style={{\n            width: \"60px\",\n            height: \"60px\",\n            margin: \"0px 1rem\",\n            cursor: \"pointer\",\n          }}\n          onClick={() => sort()}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default SortingVisualizer;\n\nconst randomFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min * 1) + min);\n};\n","export const getBubbleSortAnimations = (array) => {\n  let n = array.length;\n  let animations = [];\n  for (let i = 0; i < n - 1; i++) {\n    for (let j = 0; j < n - i - 1; j++) {\n      if (array[j] > array[j + 1]) {\n        animations.push([j, j + 1, true, false]);\n        animations.push([j, j + 1, true, true]);\n        var temp = array[j];\n        array[j] = array[j + 1];\n        array[j + 1] = temp;\n        animations.push([j, array[j], false, false]);\n        animations.push([j + 1, temp, false, false]);\n      }\n    }\n  }\n  return animations;\n};\n","export const getSelectionSortAnimations = (arr) => {\n  let i, j, min_idx;\n  let n = arr.length;\n  const animations = [];\n\n  for (i = 0; i < n - 1; i++) {\n    min_idx = i;\n    for (j = i + 1; j < n; j++) if (arr[j] < arr[min_idx]) min_idx = j;\n\n    animations.push([min_idx, i, true, false]);\n    animations.push([min_idx, i, true, true]);\n\n    let temp = arr[min_idx];\n    arr[min_idx] = arr[i];\n    arr[i] = temp;\n\n    animations.push([min_idx, arr[min_idx], false, false]);\n    animations.push([i, temp, false, false]);\n  }\n  return animations;\n};\n","export const getInsertionSortAnimations = (arr) => {\n  let n = arr.length;\n  let i, key, j;\n  const animations = [];\n  for (i = 1; i < n; i++) {\n    key = arr[i];\n    j = i - 1;\n    while (j >= 0 && arr[j] > key) {\n      animations.push([j, j + 1, true, false]);\n      animations.push([j, j + 1, true, true]);\n      arr[j + 1] = arr[j];\n      animations.push([j + 1, arr[j], false, false]);\n      j = j - 1;\n    }\n    arr[j + 1] = key;\n    animations.push([j + 1, key, false, false]);\n  }\n  return animations;\n};\n","import SortingVisualizer from \"./Visualizer/SortingVisualizer\";\n\nfunction App() {\n  return (\n    <div>\n      <SortingVisualizer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}